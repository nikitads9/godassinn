openapi: 3.0.1
info:
  title: API сервиса бронирования
  description: Сервис для записи и чтения записей о бронированиях
  termsOfService: http://swagger.io/terms/
  contact:
    name: Никита Денисёнок
    url: https://vk.com/ndenisenok
  license:
    name: GNU 3.0
    url: https://www.gnu.org/licenses/gpl-3.0.ru.html
  version: "1.0"
servers:
- url: http://localhost:3000/bookings
- url: https://localhost:3000/bookings
- url: http://localhost:5000/auth
- url: https://localhost:5000/auth
tags:
- name: Бронирования
  description: "операции с бронированиями, объявлениями и интервалами"
- name: Пользователи
  description: "сервис для просмотра и изменения своего профиля"
- name: Авторизация
  description: "операции регистрации и авторизации"
paths:
  /sign-in:
    get:
      tags:
      - Авторизация
      summary: вход
      description: "Получение токена авторизации для действий, доступных только авторизованным пользователям. Требуется логин и пароль, полученные через basic auth"
      operationId: getOauthToken
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        "400":
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Отказано в доступе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "503":
          description: Сервис недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - BasicAuth: []
  /sign-up:
    post:
      tags:
      - Авторизация
      summary: регистрация
      description: "Создание пользователя с указанным логином, паролем, именем и телефоном. Пароль хэшируется bcrypto. Все параметры обязательны. Возвращает jwt токен."
      operationId: signUpUserJson
      requestBody:
        description: Профиль пользователя
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        "400":
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "503":
          description: Сервис недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: user
  /add:
    post:
      tags:
      - Бронирования
      summary: добавление брони
      description: "Добавляет нового пользователя с соответстсвующими параметрами. NotificationPeriod
         это необязательнный параметр тела запроса, который при наличии должен быть в формате {число}s,{число}m или  {число}h. Операция реализована с использованием транзакций сначала првоеряется доступность объявления. 
         В случае, если бронь пересекается с другой (даже если она принадлежит автору запроса),
        запрос является неудачным. Параметр startDate дне должен быть датой до параметра endDate
         и ОБЕ даты должны быть актуальными."
      operationId: addByBookingJSON
      requestBody:
        description: Данные о бронировании
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddBookingRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddBookingResponse'
        "400":
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Отказано в доступе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "503":
          description: Сервис недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Bearer: []
      x-codegen-request-body-name: booking
  /get-bookings:
    get:
      tags:
      - Бронирования
      summary: получение нескольких бронирований
      description: "Метод возвращает несколько бронирований пользователя в рамках заданного интервала. Параметры запроса (query) это даты start и end (первая должна быть раньше второй и обе должны быть актуальны)."
      operationId: getMultipleBookingsByTag
      parameters:
      - name: start
        in: query
        description: от сих
        required: true
        schema:
          type: string
          format: time.Time
          default: 2024-04-28T17:43:00
      - name: end
        in: query
        description: до сих
        required: true
        schema:
          type: string
          format: time.Time
          default: 2024-04-29T17:43:00
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBookingsResponse'
        "400":
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Отказано в доступе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "503":
          description: Сервис недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Bearer: []
  /get-vacant-offers:
    get:
      tags:
      - Бронирования
      summary: получить список доступных объявлений
      description: "Получает две даты в качестве параметров запроса. начало должно быть раньше окончания, и срок действия обоих параметров не должен истечь. В ответ выдает список доступных в течение заданного нтервала для брони объявлений и и информацию о них."
      operationId: getOffersByDates
      parameters:
      - name: start
        in: query
        description: "от сих"
        required: true
        schema:
          type: string
          format: time.Time
          default: 2024-04-28T17:43:00
      - name: end
        in: query
        description: "до сих"
        required: true
        schema:
          type: string
          format: time.Time
          default: 2024-04-29T17:43:00
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVacantOffersResponse'
        "400":
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "503":
          description: Сервис недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/delete:
    delete:
      tags:
      - Пользователи
      summary: удалить свой профиль
      description: "Удаляет пользователя и все связанные с ним брони."
      operationId: deleteMyInfo
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Отказано в доступе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "503":
          description: Сервис недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Bearer: []
  /user/edit:
    patch:
      tags:
      - Пользователи
      summary: изменить данные своего профиля
      description: "Обновляет профиль пользователя с введенными значениями. Если значения не указаны, возвращается сообщение об ошибке. Номер телефона должен быть в формате +79991234567 или 89991234567. Все указанные параметры тела обязательны и не должны быть пустыми (т.е. пустой строкой), так как значения проверяются на пустоту."
      operationId: modifyUserByJSON
      requestBody:
        description: Запрос на изменение профиля
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditMyProfileRequest'
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Отказано в доступе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "503":
          description: Сервис недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Bearer: []
      x-codegen-request-body-name: user
  /user/me:
    get:
      tags:
      - Пользователи
      summary: получить информацию о своем профиле
      description: "Операция возвращает данные о профиле текущего пользователя."
      operationId: getMyUserAuth
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMyProfileResponse'
        "400":
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Отказано в доступе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "503":
          description: Сервис недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Bearer: []
  /{booking_id}/delete:
    delete:
      tags:
      - Бронирования
      summary: отменить бронь
      description: "Удаляет бронь по ее указанному UUID. Разрешено удалять только свои бронирования."
      operationId: removeByBookingID
      parameters:
      - name: booking_id
        in: path
        description: Идентификатор брони
        required: true
        schema:
          type: string
          format: uuid
          default: 550e8400-e29b-41d4-a716-446655440000
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Отказано в доступе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "503":
          description: Сервис недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Bearer: []
  /{booking_id}/get:
    get:
      tags:
      - Бронирования
      summary: получить информацию о брони
      description: "Возвращает информацию о бронировании по указанному идентификатору."
      operationId: getBookingbyTag
      parameters:
      - name: booking_id
        in: path
        description: booking_id
        required: true
        schema:
          type: string
          format: uuid
          default: 550e8400-e29b-41d4-a716-446655440000
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBookingResponse'
        "400":
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Отказано в доступе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "503":
          description: Сервис недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Bearer: []
  /{booking_id}/update:
    patch:
      tags:
      - Бронирования
      summary: обновить информацию о бронировании
      description: "Обновляет существующую бронь, задавая BookingID, идентификатор объявления и дату начала, конечную дату (период уведомления необязателен). Операция реализована с помощью использования транзакции проверяется наличие объявления. В случае попытки изменить свое предыдущее бронирование (т.е. расширить или сузить его период), бронирование обновляется. Если оно совпадает с бронированием кого-то другого или с другим заказом клиента запрос на бронирование считается неудачным. Параметр StartDate должен быть раньше параметра EndDate, и срок действия обоих параметров не должен истечь."
      operationId: modifyBookingByJSON
      parameters:
      - name: booking_id
        in: path
        description: Идентификатор бронирования
        required: true
        schema:
          type: string
          format: uuid
          default: 550e8400-e29b-41d4-a716-446655440000
      requestBody:
        description: Изменяемая информация о бронировании
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBookingRequest'
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Отказано в доступе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "503":
          description: Сервис недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - Bearer: []
      x-codegen-request-body-name: booking
  /{offer_id}/get-vacant-dates:
    get:
      tags:
      - Бронирования
      summary: получить доступные периоды бронирования
      description: "Возвращает доступные периоды бронирования для объявления с указанным id."
      operationId: getDatesByOfferID
      parameters:
      - name: offer_id
        in: path
        description: Идентификатор объявления
        required: true
        schema:
          type: integer
          format: int64
          default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVacantDateResponse'
        "400":
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "503":
          description: Сервис недоступен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    AuthResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT токен для доступа
    Error:
      type: object
      properties:
        message:
          type: string
          example: Сообщение об ошибке
        status:
          type: integer
          example: 400
    SignUpRequest:
      required:
      - login
      - name
      - password
      - phoneNumber
      type: object
      properties:
        login:
          type: string
          description: Логин пользователя
          example: pavel_durov
        name:
          type: string
          description: Имя пользователя
          example: Pavel Durov
        password:
          type: string
          description: Пароль
          example: "12345"
        phoneNumber:
          type: string
          description: Телефонный номер пользователя
          example: "89771384545"
    AddBookingRequest:
      required:
      - endDate
      - startDate
      - offerID
      type: object
      properties:
        endDate:
          type: string
          description: Дата и время окончания бронировании
          example: 2024-04-29T17:43:00Z
        notifyAt:
          type: string
          description: Интервал времени для предварительного уведомления о бронировании
          example: 24h
        startDate:
          type: string
          description: Дата и время начала бронировании
          example: 2024-04-28T17:43:00Z
        offerID:
          type: integer
          description: ID объявления
          example: 1
    AddBookingResponse:
      type: object
      properties:
        bookingID:
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
    BookingInfo:
      type: object
      properties:
        BookingID:
          type: string
          description: Уникальный идентификатор бронирования
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
        createdAt:
          type: string
          description: Дата и время создания
          example: 2024-04-27T17:43:00Z
        endDate:
          type: string
          description: Дата и время окончания бронировании
          example: 2024-04-29T17:43:00Z
        notifyAt:
          type: string
          description: Интервал времени для уведомления о бронировании
          example: 24h00m00s
        startDate:
          type: string
          description: Дата и время начала бронировании
          example: 2024-04-28T17:43:00Z
        offerID:
          type: integer
          description: ID Объявления
          example: 1
        updatedAt:
          type: string
          description: Дата и время обновления
          example: 2024-04-27T18:43:00Z
        userID:
          type: integer
          description: Идентификатор владельца бронирования
          example: 1
    EditMyProfileRequest:
      type: object
      properties:
        name:
          type: string
          description: Имя пользователя
          example: Kolya Durov
        password:
          type: string
          description: Пароль
          example: "123456"
        login:
          type: string
          description: Логин пользователя
          example: kolya_durov
        phoneNumber:
          type: string
          description: Телефонный номер пользователя
          example: "89771384545"
    GetBookingResponse:
      type: object
      properties:
        booking:
          $ref: '#/components/schemas/BookingInfo'
    GetBookingsResponse:
      type: object
      properties:
        bookings:
          type: array
          items:
            $ref: '#/components/schemas/BookingInfo'
    GetMyProfileResponse:
      type: object
      properties:
        profile:
          type: object
          description: Профиль пользователя
          allOf:
          - $ref: '#/components/schemas/UserInfo'
    GetVacantDateResponse:
      type: object
      properties:
        intervals:
          type: array
          items:
            $ref: '#/components/schemas/Interval'
    GetVacantOffersResponse:
      type: object
      properties:
        offers:
          type: array
          items:
            $ref: '#/components/schemas/Offer'
    Interval:
      type: object
      properties:
        end:
          type: string
          description: Номер свободен по
          example: 2024-06-10T15:04:05Z
        start:
          type: string
          description: Номер свободен с
          example: 2024-05-10T15:04:05Z
    Offer:
      type: object
      properties:
        bedsCount:
          type: integer
          description: Количество кроватей
          example: 4
        city:
          type: string
          description: Город
          example: Москва
        cost:
          type: integer
          description: Стоимость за ночь
          example: 4800
        house:
          type: integer
          description: Номер дома
          example: 88
        name:
          type: string
          description: Имя объявления
          example: Продам гараж
        offerID:
          type: integer
          description: Номер объявления
          example: 1
        rating:
          type: integer
          description: Оценка объявления
          example: 5
        shortDescription:
          type: string
          description: Краткое описание
          example: продам в хорошие руки
        street:
          type: string
          description: Улица
          example: Пушкина
        typeOfHousing:
          type: string
          description: Тип помещения
          example: гараж
        landlordID:
          type: integer
          description: ID арендодателя
          example: 1
    UserInfo:
      type: object
      properties:
        createdAt:
          type: string
          description: Дата и время регистрации
        id:
          type: integer
          description: ID пользователя в системе
        name:
          type: string
          description: Имя пользователя
        phoneNumber:
          type: string
          description: Телефонный номер пользователя
        login:
          type: string
          description: Логин пользователя
        updatedAt:
          type: string
          description: Дата и время обновления профиля
    UpdateBookingRequest:
      type: object
      required:
      - endDate
      - offerID
      - startDate
      properties:
          endDate:
            type: string
            description: Дата и время окончания бронировании
            example: 2024-04-29T17:43:00Z
          notifyAt:
            type: string
            description: Интервал времени для предварительного уведомления о бронировании
            example: 24h
          offerID:
            type: integer
            description: Номер апаратаментов
            example: 1
          startDate:
            type: string
            description: Дата и время начала бронировании
            example: 2024-04-28T17:43:00Z
  securitySchemes:
      BasicAuth:
        type: http
        scheme: basic
      Bearer:
        type: apiKey
        description: Type "Bearer" followed by a space and JWT token.
        name: Authorization
        in: header
